// Generated by CoffeeScript 1.6.3
(function () {
    var browserify, colors, createBundle, createBundles, files, gulp, source, watchify;

    gulp = require('gulp');

    browserify = require('browserify');

    watchify = require('watchify');

    source = require('vinyl-source-stream');

    colors = require('colors');

    var browserifyShim = require('browserify-shim');

    var glob = require('glob');

    var istanbul = require('browserify-istanbul');


    files = [
        {
            input: [config.paths.src.riqGridModule],
            output: config.filenames.release.scripts
        },
        {
            input: [config.paths.src.riqGridApp],
            output: config.filenames.build.scripts
        },
        {
            input: glob.sync('./node_modules/@grid/!(proto)/*.js'), //we load the tests through this symlink so istanbul can map correctly
            output: 'bundle-tests.js',
            dest: 'test-assets',
            istanbul: true
        }
    ];


    createBundle = function (options, cb) {
        var isWatching = !global.release;
        var bundleMethod, bundler, rebundle;
        bundleMethod = isWatching ? watchify : browserify;
        bundler = bundleMethod({
            entries: options.input,
            paths: config.paths.browserify
        });

        if (options.istanbul) {
            //only do this when testing
            bundler.transform(istanbul({
                ignore: ['**/bower_components/**', '**/templates.js', '**/proto/**', '**/grid-spec-helper/**', '**/*.spec.js', '**/node_modules/!(@grid)/**'],
                defaultIgnore: false
            }));
        }

        var destination = options.dest || (global.release ? config.paths.dest.release.scripts : config.paths.dest.build.scripts);
        rebundle = function () {
            var startTime;
            startTime = new Date().getTime();
            return bundler.bundle({
                debug: true
            }).on('error', function () {
                return console.log(arguments);
            }).pipe(source(options.output)).pipe(gulp.dest(destination).on('end', function () {
                var time;
                time = (new Date().getTime() - startTime) / 1000;
                cb();
                return console.log("" + options.output.cyan + " was browserified: " + (time + 's').magenta);
            }));
        };
        if (isWatching) {
            bundler.on('update', rebundle);
        }
        return rebundle();
    };

    createBundles = function (bundles, cb) {
        //i feel so dirty for this hack but it works, and it's the best i can find right now
        var numBundles = bundles.length;
        return bundles.forEach(function (bundle) {
            return createBundle(bundle, function () {
                numBundles--;
                if (numBundles === 0) {
                    cb();
                }
            });
        });
    };

    gulp.task('browserify-omega', function (cb) {
        createBundles(files, cb);
    });

}).call(this);
