var renderOncePType = require('render-once');

module.exports =
    angular.module('prototype-harness', [
        require('../../../../tmp/templates').name
    ])
        .directive('prototypeHarness', function () {
            return {
                restrict: 'E',
                replace: true,
                templateUrl: 'prototype-harness.html',
                link: function ($scope, elem) {
                    $scope.ptypeModel = {
                        rows: 10000,
                        cols: 10000
                    };

                    $scope.rebuild = function () {
                        if (currentPType) {
                            currentPType.setDimensions($scope.ptypeModel.rows, $scope.ptypeModel.cols);
                            currentPType.rebuild();
                        }
                    };

                    var currentPType, container;

                    function resetContainer() {
                        if (container) {
                            container.remove();
                        }
                        container = $('<div class="prototype-container"/>');
                        elem.append(container);
                    }

                    $scope.buildOnceText = function () {
                        buildContainer(function () {
                            var ptype = renderOncePType(container);
                            ptype.setUseTextNodes(true);
                            return ptype;
                        });

                    };

                    $scope.buildOnceHtml = function () {
                        buildContainer(function () {
                            var ptype = renderOncePType(container);
                            ptype.setUseTextNodes(false);
                            return ptype;
                        });
                    };

                    function buildContainer(setupPrototypeFn) {
                        resetContainer();
                        currentPType = setupPrototypeFn();
                        $scope.rebuild();
                    }
                }
            };
        })
;