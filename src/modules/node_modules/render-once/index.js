var mousewheel = require('mousewheel');

module.exports = function () {


    //build grid
    var cellHeight = 30, cellWidth = 100;
    var scrollTop = 0, scrollLeft = 0;
    var rowOffset = 0, colOffset = 0;
    var rows = Math.floor($(window).height() / cellHeight), cols = Math.floor($(window).width() / cellWidth);
    var rowRange = Number.range(0, 10000 * cellHeight);
    var colRange = Number.range(0, 10000 * cellWidth);
    var cells = [];

    function getCellClass(r, c) {
        return 'row-' + r + ' col-' + c + ' cell ' + (r % 2 === 1 ? 'odd' : 'even');
    }

    function buildRows() {
        for (var r = 0; r < rows; r++) {
            cells[r] = [];
            for (var c = 0; c < cols; c++) {
                var cell = $('<div>').css({
                    height: cellHeight + 'px',
                    width: cellWidth + 'px',
                    top: r * cellHeight + 'px',
                    left: c * cellWidth + 'px',
                    position: 'absolute'
                }).addClass(getCellClass(r, c)).text('');

                cells[r][c] = cell;
                $('body').append(cell);
            }
        }
    }

    buildRows();

    function getOffset(scroll, length) {
        return Math.floor(scroll / length);
    }

    function getNodeValue(r, c) {
        var rowValue = (r + rowOffset);
        return rowValue + ',' + (c + colOffset);
    }

    function writeTableValues() {
        for (var r = 0; r < rows; r++) {
            for (var c = 0; c < cols; c++) {
                var $cell = cells[r][c];
                //$cell[0].childNodes[0].nodeValue = getNodeValue(r, c);
                $cell[0].innerHTML = '<span>' + (r + rowOffset) + ',' + (c + colOffset) + '</span>';
            }
        }
        if (rowOffset % 2 === 1) {
            $('body').addClass('odds');
        } else {
            $('body').removeClass('odds');
        }
    }

    writeTableValues();
    var calcOffsetAndDraw = function () {
        var newRowOffset = getOffset(scrollTop, cellHeight);
        var newColOffset = getOffset(scrollLeft, cellWidth);
        if (newColOffset !== colOffset || newRowOffset !== rowOffset) {
            colOffset = newColOffset;
            rowOffset = newRowOffset;
            writeTableValues();
        }
    }.debounce(10);

    //scroll
    var onMouseWheel = function (e) {
        e.preventDefault();
        var event = e.originalEvent;
        var yDelta = mousewheel.getDelta(event);
        var xDelta = mousewheel.getDelta(event, true);
        scrollTop = rowRange.clamp(scrollTop - yDelta);
        scrollLeft = colRange.clamp(scrollLeft - xDelta);
        //console.log('delta: ', xDelta, yDelta);
        //console.log('scroll: ', scrollLeft, scrollTop);
        calcOffsetAndDraw();
    };
    $(window).on('mousewheel', onMouseWheel);
    $(window).on('wheel', onMouseWheel);
}
